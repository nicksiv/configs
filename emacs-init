;; -*- mode: Lisp -*-

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(setq inhibit-startup-screen t )
(setq ring-bell-function 'ignore ) ; silent bell on mistakes
(setq-default fill-column 80) ; toggle wrapping text at this column
;(global-linum-mode 1)        ; line numbering
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p); Changes all yes/no questions to y/n type;
(global-visual-line-mode t)
(setq default-input-method "greek") ; Change layout with C-\
(setq calendar-week-start-day 1)
(setq org-startup-folded (quote showall))
(setq default-directory "~/Dropbox/ZK")

;; Keybindings
(global-set-key [f5] 'bookmark-bmenu-list)
(global-set-key [(control q)] 'kill-this-buffer)

;; Writeroom with spell check and text scale
(global-set-key [f8] (lambda () (interactive) 
(writeroom-mode)(flyspell-mode)(text-scale-set 1)(end-of-buffer)
))

;; Open organizer files
(global-set-key "\C-cn" (lambda () (interactive) 
		       (find-file "~/swan/org/nicksiv.org")(beginning-of-buffer)
(delete-other-windows)
))


;; ORG Standard key bindings;
(global-set-key "\C-cl" 'org-store-link);
(global-set-key "\C-ca" 'org-agenda);
(global-set-key "\C-cb" 'org-iswitchb);
(define-key global-map "\C-cc" 'org-capture)


;; Agenda custom
(setq org-agenda-custom-commands
      '(("w" "Worklist priority A#"
         (
	  (todo "TODO")
	  (tags-todo "+PRIORITY=\"A\"")
         ((org-agenda-compact-blocks t))) 

        )))


;; Custom ZK functions

(defun get-ZK-file-today ()
  "Return filename for today's journal entry."
(let ((daily-name (format-time-string "%Y%m%dT%H%M")))
    (expand-file-name (concat "~/Dropbox/ZK/" daily-name " - "  (read-string "Name?") ".org"))))

(defun ZK-file-today ()
  "Create and load a journal file based on today's date."
  (interactive)
  (find-file (get-ZK-file-today))
(insert (concat
                 "#+TITLE: " (nth 1 (split-string (buffer-file-name) " \- "))  "\n#+CATEGORY:\n#+FILETAGS:\n"))
)

(global-set-key (kbd "C-c z") 'ZK-file-today)


;; Package setup

;; use-package setup
(require 'package)
(setq package-enable-at-startup nil) ; dont do it immediately

(setq package-archives
   (quote
    (("gnu" . "http://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/"))))
(package-initialize)

;; Bootstrap use-package
(unless (package-installed-p 'use-package)
  (package-refresh-contents) ; update archives
  (package-install 'use-package)) ; grab the newest use-package

;; Define packages
(require 'use-package)


;; Always download if not available
(setq use-package-always-ensure t)


(use-package writeroom-mode)

;; easy-hugo
(use-package easy-hugo
:init
(setq easy-hugo-basedir "~/sivridio/")
(setq easy-hugo-postdir "content/posts")
(setq easy-hugo-url "https://sivridis.com")
(setq easy-hugo-root "/home/blog/")
(setq easy-hugo-previewtime "300")
:bind ("C-c h" . easy-hugo))

;; ivy
(use-package ivy
  :diminish (ivy-mode . "")
  :init (ivy-mode 1) ; globally at startup
  :config
  (setq ivy-use-virtual-buffers t)
  (setq ivy-height 20)
  (setq ivy-count-format "%d/%d "))
(provide 'init-ivy)
;;; init-ivy.el ends here.

;; Override the basic Emacs commands
(use-package counsel
  :bind* ; load when pressed
  (("M-x"     . counsel-M-x)
   ("C-s"     . swiper)
   ("C-x C-f" . counsel-find-file)
   ("C-x C-r" . counsel-recentf)  ; search for recently edited
   ("C-c g"   . counsel-git)      ; search for files in git repo
   ("C-c j"   . counsel-git-grep) ; search for regexp in git repo
   ("C-c /"   . counsel-ag)       ; Use ag for regexp
   ("C-x l"   . counsel-locate)
   ("C-x C-f" . counsel-find-file)
   ("<f1> f"  . counsel-describe-function)
   ("<f1> v"  . counsel-describe-variable)
   ("<f1> l"  . counsel-find-library)
   ("<f2> i"  . counsel-info-lookup-symbol)
   ("<f2> u"  . counsel-unicode-char)
   ("C-c C-r" . ivy-resume)))     ; Resume last Ivy-based completion


;; Deft
(use-package deft
  :bind ("<f9>" . deft)
  :commands (deft)
  :config (setq deft-directory "~/Dropbox/ZK/"
                deft-extensions '("md" "org" "txt")
		deft-use-filename-as-title t
		deft-markdown-mode-title-level 1
		deft-default-extension "org"
		)
  )


	       
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#242728" "#ff0066" "#63de5d" "#E6DB74" "#06d8ff" "#ff8eff" "#53f2dc" "#f8fbfc"])
 '(beacon-color "#d54e53")
 '(compilation-message-face (quote default))
 '(custom-enabled-themes (quote (moe-dark)))
 '(custom-safe-themes
   (quote
    ("26d49386a2036df7ccbe802a06a759031e4455f07bda559dcf221f53e8850e69" "1b8d67b43ff1723960eb5e0cba512a2c7a2ad544ddb2533a90101fd1852b426e" "d8dc153c58354d612b2576fea87fe676a3a5d43bcc71170c62ddde4a1ad9e1fb" "58c6711a3b568437bab07a30385d34aacf64156cc5137ea20e799984f4227265" "b3775ba758e7d31f3bb849e7c9e48ff60929a792961a2d536edec8f68c671ca5" "332fcf3c7208aca9fab65d54203f78a242482e7fd65f5725a2482c20b1730732" "a2cde79e4cc8dc9a03e7d9a42fabf8928720d420034b66aecc5b665bbf05d4e9" "bffa9739ce0752a37d9b1eee78fc00ba159748f50dc328af4be661484848e476" "37ba833442e0c5155a46df21446cadbe623440ccb6bbd61382eb869a2b9e9bf9" default)))
 '(deft-use-filename-as-title nil)
 '(deft-use-filter-string-for-filename t)
 '(fci-rule-color "#323342")
 '(flycheck-color-mode-line-face-to-color (quote mode-line-buffer-id))
 '(frame-background-mode (quote dark))
 '(highlight-changes-colors (quote ("#ff8eff" "#ab7eff")))
 '(highlight-tail-colors
   (quote
    (("#323342" . 0)
     ("#63de5d" . 20)
     ("#4BBEAE" . 30)
     ("#1DB4D0" . 50)
     ("#9A8F21" . 60)
     ("#A75B00" . 70)
     ("#F309DF" . 85)
     ("#323342" . 100))))
 '(linum-format " %7i ")
 '(magit-diff-use-overlays nil)
 '(menu-bar-mode nil)
 '(org-agenda-files (quote ("~/ZK/")))
 '(org-blank-before-new-entry (quote ((heading) (plain-list-item . auto))))
 '(org-hide-leading-stars t)
 '(org-insert-heading-respect-content t)
 '(org-log-into-drawer t)
 '(org-log-state-notes-insert-after-drawers t)
 '(org-refile-targets (quote ((org-agenda-files :maxlevel . 5))))
 '(org-return-follows-link t)
 '(org-reverse-note-order t)
 '(org-todo-keyword-faces
   (quote
    (("TODO" :foreground "pink" :background "dark red" :weight bold)
     ("APPT" :foreground "dark pink" :weight bold)
     ("STRT" :foreground "dark orange" :weight bold)
     ("WAIT" :foreground "red" :weight bold)
     ("NOTE" :foreground "white" :background "dark gray" :weight bold)
     ("DLGD" :foreground "dark violet" :weight bold)
     ("DFRD" :foreground "dark blue" :weight bold)
     ("SMDY" :foreground "dark gray" :background "dark blue" :weight bold)
     ("PROJ" :foreground "#088e8e" :background "dark blue" :weight bold))))
 '(org-todo-repeat-to-state "TODO")
 '(package-selected-packages
   (quote
    (yasnippet moe-theme color-theme-sanityinc-tomorrow abyss-theme easy-hugo counsel use-package ivy writeroom-mode))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(org-level-2 ((t (:foreground "#a1db00" :weight light)))))
